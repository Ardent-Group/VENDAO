{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "newCaller",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnPassTicket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "changeCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_investor",
          "type": "address"
        }
      ],
      "name": "daoPassTicket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_newTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200190f3803806200190f833981016040819052620000349162000129565b6040518060400160405280600781526020016656656e2044414f60c81b815250604051806040016040528060038152602001622b32b760e91b815250816000908162000081919062000200565b50600162000090828262000200565b505050620000ad620000a7620000d360201b60201c565b620000d7565b600880546001600160a01b0319166001600160a01b0392909216919091179055620002cc565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200013c57600080fd5b81516001600160a01b03811681146200015457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018657607f821691505b602082108103620001a757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fb57600081815260208120601f850160051c81016020861015620001d65750805b601f850160051c820191505b81811015620001f757828155600101620001e2565b5050505b505050565b81516001600160401b038111156200021c576200021c6200015b565b62000234816200022d845462000171565b84620001ad565b602080601f8311600181146200026c5760008415620002535750858301515b600019600386901b1c1916600185901b178555620001f7565b600085815260208120601f198616915b828110156200029d578886015182559484019460019091019084016200027c565b5085821015620002bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61163380620002dc6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610257578063c87b56dd1461026a578063e985e9c51461027d578063ece2230d146102b9578063f2fde38b146102cc57600080fd5b806370a0823114610210578063715018a6146102235780638da5cb5b1461022b57806395d89b411461023c578063a22cb4651461024457600080fd5b8063207b7ad3116100f4578063207b7ad3146101a357806323b872dd146101c45780632921d8d4146101d757806342842e0e146101ea5780636352211e146101fd57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046111c4565b6102df565b60405190151581526020015b60405180910390f35b610156610331565b6040516101459190611231565b610176610171366004611244565b6103c3565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611274565b6103ea565b005b6101b66101b136600461129e565b610504565b604051908152602001610145565b6101a16101d23660046112b9565b610579565b6101a16101e536600461129e565b6105aa565b6101a16101f83660046112b9565b610613565b61017661020b366004611244565b61062e565b6101b661021e36600461129e565b61068e565b6101a1610714565b6006546001600160a01b0316610176565b610156610728565b6101a16102523660046112f5565b610737565b6101a1610265366004611347565b610746565b610156610278366004611244565b61077e565b61013961028b366004611423565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101a16102c7366004611244565b6107f2565b6101a16102da36600461129e565b61084f565b60006001600160e01b031982166380ac58cd60e01b148061031057506001600160e01b03198216635b5e139f60e01b145b8061032b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034090611456565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90611456565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b60006103ce826108c5565b506000908152600460205260409020546001600160a01b031690565b60006103f58261062e565b9050806001600160a01b0316836001600160a01b0316036104675760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104835750610483813361028b565b6104f55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161045e565b6104ff8383610924565b505050565b6008546000906001600160a01b031633146105585760405162461bcd60e51b81526020600482015260146024820152731058d8d95cdcda589a5b1a5d1e4811195b9a595960621b604482015260640161045e565b506007546105668282610992565b610574600780546001019055565b919050565b6105833382610b1d565b61059f5760405162461bcd60e51b815260040161045e90611490565b6104ff838383610b9c565b6105b2610d00565b600880546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fde2be9795b1eaa6d18d69ccec06258b7f0c3312e8ef7b352f93ae3d81534ca31910160405180910390a15050565b6104ff83838360405180602001604052806000815250610746565b6000818152600260205260408120546001600160a01b03168061032b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161045e565b60006001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161045e565b506001600160a01b031660009081526003602052604090205490565b61071c610d00565b6107266000610d5a565b565b60606001805461034090611456565b610742338383610dac565b5050565b6107503383610b1d565b61076c5760405162461bcd60e51b815260040161045e90611490565b61077884848484610e7a565b50505050565b6060610789826108c5565b60006107a060408051602081019091526000815290565b905060008151116107c057604051806020016040528060008152506107eb565b806107ca84610ead565b6040516020016107db9291906114dd565b6040516020818303038152906040525b9392505050565b6008546001600160a01b031633146108435760405162461bcd60e51b81526020600482015260146024820152731058d8d95cdcda589a5b1a5d1e4811195b9a595960621b604482015260640161045e565b61084c81610f40565b50565b610857610d00565b6001600160a01b0381166108bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045e565b61084c81610d5a565b6000818152600260205260409020546001600160a01b031661084c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161045e565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109598261062e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166109e85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045e565b6000818152600260205260409020546001600160a01b031615610a4d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045e565b6000818152600260205260409020546001600160a01b031615610ab25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080610b298361062e565b9050806001600160a01b0316846001600160a01b03161480610b7057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b945750836001600160a01b0316610b89846103c3565b6001600160a01b0316145b949350505050565b826001600160a01b0316610baf8261062e565b6001600160a01b031614610bd55760405162461bcd60e51b815260040161045e9061150c565b6001600160a01b038216610c375760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161045e565b826001600160a01b0316610c4a8261062e565b6001600160a01b031614610c705760405162461bcd60e51b815260040161045e9061150c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e0d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e85848484610b9c565b610e9184848484610fd5565b6107785760405162461bcd60e51b815260040161045e90611551565b60606000610eba836110d6565b600101905060008167ffffffffffffffff811115610eda57610eda611331565b6040519080825280601f01601f191660200182016040528015610f04576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f0e57509392505050565b6000610f4b8261062e565b9050610f568261062e565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b156110cb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110199033908990889088906004016115a3565b6020604051808303816000875af1925050508015611054575060408051601f3d908101601f19168201909252611051918101906115e0565b60015b6110b1573d808015611082576040519150601f19603f3d011682016040523d82523d6000602084013e611087565b606091505b5080516000036110a95760405162461bcd60e51b815260040161045e90611551565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b94565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111155772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611141576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061115f57662386f26fc10000830492506010015b6305f5e1008310611177576305f5e100830492506008015b612710831061118b57612710830492506004015b6064831061119d576064830492506002015b600a831061032b5760010192915050565b6001600160e01b03198116811461084c57600080fd5b6000602082840312156111d657600080fd5b81356107eb816111ae565b60005b838110156111fc5781810151838201526020016111e4565b50506000910152565b6000815180845261121d8160208601602086016111e1565b601f01601f19169290920160200192915050565b6020815260006107eb6020830184611205565b60006020828403121561125657600080fd5b5035919050565b80356001600160a01b038116811461057457600080fd5b6000806040838503121561128757600080fd5b6112908361125d565b946020939093013593505050565b6000602082840312156112b057600080fd5b6107eb8261125d565b6000806000606084860312156112ce57600080fd5b6112d78461125d565b92506112e56020850161125d565b9150604084013590509250925092565b6000806040838503121561130857600080fd5b6113118361125d565b91506020830135801515811461132657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561135d57600080fd5b6113668561125d565b93506113746020860161125d565b925060408501359150606085013567ffffffffffffffff8082111561139857600080fd5b818701915087601f8301126113ac57600080fd5b8135818111156113be576113be611331565b604051601f8201601f19908116603f011681019083821181831017156113e6576113e6611331565b816040528281528a60208487010111156113ff57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561143657600080fd5b61143f8361125d565b915061144d6020840161125d565b90509250929050565b600181811c9082168061146a57607f821691505b60208210810361148a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516114ef8184602088016111e1565b8351908301906115038183602088016111e1565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115d690830184611205565b9695505050505050565b6000602082840312156115f257600080fd5b81516107eb816111ae56fea2646970667358221220f0d6c8b0cd29ce82b9017fb68fe99489274faa2a7ea5d619525716a6581c9e2864736f6c63430008140033",
    "sourceMap": "222:1480:5:-:0;;;648:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:16;;;;;;;;;;;;;-1:-1:-1;;;1390:113:16;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:16;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:16;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:12;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;712:6:5::1;:16:::0;;-1:-1:-1;;;;;;712:16:5::1;-1:-1:-1::0;;;;;712:16:5;;;::::1;::::0;;;::::1;::::0;;222:1480;;640:96:21;719:10;;640:96::o;2426:187:12:-;2518:6;;;-1:-1:-1;;;;;2534:17:12;;;-1:-1:-1;;;;;;2534:17:12;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:290:29:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:29;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:29:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:29;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:29;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:29;;;2875:26;2826:89;-1:-1:-1;;1630:1:29;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:29;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:29;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:29;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:29:o;:::-;222:1480:5;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610257578063c87b56dd1461026a578063e985e9c51461027d578063ece2230d146102b9578063f2fde38b146102cc57600080fd5b806370a0823114610210578063715018a6146102235780638da5cb5b1461022b57806395d89b411461023c578063a22cb4651461024457600080fd5b8063207b7ad3116100f4578063207b7ad3146101a357806323b872dd146101c45780632921d8d4146101d757806342842e0e146101ea5780636352211e146101fd57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046111c4565b6102df565b60405190151581526020015b60405180910390f35b610156610331565b6040516101459190611231565b610176610171366004611244565b6103c3565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611274565b6103ea565b005b6101b66101b136600461129e565b610504565b604051908152602001610145565b6101a16101d23660046112b9565b610579565b6101a16101e536600461129e565b6105aa565b6101a16101f83660046112b9565b610613565b61017661020b366004611244565b61062e565b6101b661021e36600461129e565b61068e565b6101a1610714565b6006546001600160a01b0316610176565b610156610728565b6101a16102523660046112f5565b610737565b6101a1610265366004611347565b610746565b610156610278366004611244565b61077e565b61013961028b366004611423565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101a16102c7366004611244565b6107f2565b6101a16102da36600461129e565b61084f565b60006001600160e01b031982166380ac58cd60e01b148061031057506001600160e01b03198216635b5e139f60e01b145b8061032b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034090611456565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90611456565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b60006103ce826108c5565b506000908152600460205260409020546001600160a01b031690565b60006103f58261062e565b9050806001600160a01b0316836001600160a01b0316036104675760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104835750610483813361028b565b6104f55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161045e565b6104ff8383610924565b505050565b6008546000906001600160a01b031633146105585760405162461bcd60e51b81526020600482015260146024820152731058d8d95cdcda589a5b1a5d1e4811195b9a595960621b604482015260640161045e565b506007546105668282610992565b610574600780546001019055565b919050565b6105833382610b1d565b61059f5760405162461bcd60e51b815260040161045e90611490565b6104ff838383610b9c565b6105b2610d00565b600880546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fde2be9795b1eaa6d18d69ccec06258b7f0c3312e8ef7b352f93ae3d81534ca31910160405180910390a15050565b6104ff83838360405180602001604052806000815250610746565b6000818152600260205260408120546001600160a01b03168061032b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161045e565b60006001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161045e565b506001600160a01b031660009081526003602052604090205490565b61071c610d00565b6107266000610d5a565b565b60606001805461034090611456565b610742338383610dac565b5050565b6107503383610b1d565b61076c5760405162461bcd60e51b815260040161045e90611490565b61077884848484610e7a565b50505050565b6060610789826108c5565b60006107a060408051602081019091526000815290565b905060008151116107c057604051806020016040528060008152506107eb565b806107ca84610ead565b6040516020016107db9291906114dd565b6040516020818303038152906040525b9392505050565b6008546001600160a01b031633146108435760405162461bcd60e51b81526020600482015260146024820152731058d8d95cdcda589a5b1a5d1e4811195b9a595960621b604482015260640161045e565b61084c81610f40565b50565b610857610d00565b6001600160a01b0381166108bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045e565b61084c81610d5a565b6000818152600260205260409020546001600160a01b031661084c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161045e565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109598261062e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166109e85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045e565b6000818152600260205260409020546001600160a01b031615610a4d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045e565b6000818152600260205260409020546001600160a01b031615610ab25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080610b298361062e565b9050806001600160a01b0316846001600160a01b03161480610b7057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b945750836001600160a01b0316610b89846103c3565b6001600160a01b0316145b949350505050565b826001600160a01b0316610baf8261062e565b6001600160a01b031614610bd55760405162461bcd60e51b815260040161045e9061150c565b6001600160a01b038216610c375760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161045e565b826001600160a01b0316610c4a8261062e565b6001600160a01b031614610c705760405162461bcd60e51b815260040161045e9061150c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e0d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e85848484610b9c565b610e9184848484610fd5565b6107785760405162461bcd60e51b815260040161045e90611551565b60606000610eba836110d6565b600101905060008167ffffffffffffffff811115610eda57610eda611331565b6040519080825280601f01601f191660200182016040528015610f04576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f0e57509392505050565b6000610f4b8261062e565b9050610f568261062e565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b156110cb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110199033908990889088906004016115a3565b6020604051808303816000875af1925050508015611054575060408051601f3d908101601f19168201909252611051918101906115e0565b60015b6110b1573d808015611082576040519150601f19603f3d011682016040523d82523d6000602084013e611087565b606091505b5080516000036110a95760405162461bcd60e51b815260040161045e90611551565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b94565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111155772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611141576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061115f57662386f26fc10000830492506010015b6305f5e1008310611177576305f5e100830492506008015b612710831061118b57612710830492506004015b6064831061119d576064830492506002015b600a831061032b5760010192915050565b6001600160e01b03198116811461084c57600080fd5b6000602082840312156111d657600080fd5b81356107eb816111ae565b60005b838110156111fc5781810151838201526020016111e4565b50506000910152565b6000815180845261121d8160208601602086016111e1565b601f01601f19169290920160200192915050565b6020815260006107eb6020830184611205565b60006020828403121561125657600080fd5b5035919050565b80356001600160a01b038116811461057457600080fd5b6000806040838503121561128757600080fd5b6112908361125d565b946020939093013593505050565b6000602082840312156112b057600080fd5b6107eb8261125d565b6000806000606084860312156112ce57600080fd5b6112d78461125d565b92506112e56020850161125d565b9150604084013590509250925092565b6000806040838503121561130857600080fd5b6113118361125d565b91506020830135801515811461132657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561135d57600080fd5b6113668561125d565b93506113746020860161125d565b925060408501359150606085013567ffffffffffffffff8082111561139857600080fd5b818701915087601f8301126113ac57600080fd5b8135818111156113be576113be611331565b604051601f8201601f19908116603f011681019083821181831017156113e6576113e6611331565b816040528281528a60208487010111156113ff57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561143657600080fd5b61143f8361125d565b915061144d6020840161125d565b90509250929050565b600181811c9082168061146a57607f821691505b60208210810361148a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516114ef8184602088016111e1565b8351908301906115038183602088016111e1565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115d690830184611205565b9695505050505050565b6000602082840312156115f257600080fd5b81516107eb816111ae56fea2646970667358221220f0d6c8b0cd29ce82b9017fb68fe99489274faa2a7ea5d619525716a6581c9e2864736f6c63430008140033",
    "sourceMap": "222:1480:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:16;;;;;;:::i;:::-;;:::i;:::-;;;565:14:29;;558:22;540:41;;528:2;513:18;1570:300:16;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:29;;;1679:51;;1667:2;1652:18;3935:167:16;1533:203:29;3468:406:16;;;;;;:::i;:::-;;:::i;:::-;;1119:264:5;;;;;;:::i;:::-;;:::i;:::-;;;2515:25:29;;;2503:2;2488:18;1119:264:5;2369:177:29;4612:296:16;;;;;;:::i;:::-;;:::i;751:171:5:-;;;;;;:::i;:::-;;:::i;4974:149:16:-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1824:101:12:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:12;1201:85;;2633:102:16;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1389:146:5;;;;;;:::i;:::-;;:::i;2074:198:12:-;;;;;;:::i;:::-;;:::i;1570:300:16:-;1672:4;-1:-1:-1;;;;;;1707:40:16;;-1:-1:-1;;;1707:40:16;;:104;;-1:-1:-1;;;;;;;1763:48:16;;-1:-1:-1;;;1763:48:16;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:24;;;1827:36:16;1688:175;1570:300;-1:-1:-1;;1570:300:16:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:16;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:16;:2;-1:-1:-1;;;;;3605:11:16;;3597:57;;;;-1:-1:-1;;;3597:57:16;;5363:2:29;3597:57:16;;;5345:21:29;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:29;;;5485:31;5533:19;;3597:57:16;;;;;;;;;719:10:21;-1:-1:-1;;;;;3686:21:16;;;;:62;;-1:-1:-1;3711:37:16;3728:5;719:10:21;4388:162:16;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:16;;5765:2:29;3665:170:16;;;5747:21:29;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:16;5563:425:29;3665:170:16;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1119:264:5:-;1231:6;;1178:19;;-1:-1:-1;;;;;1231:6:5;1217:10;:20;1209:53;;;;-1:-1:-1;;;1209:53:5;;6195:2:29;1209:53:5;;;6177:21:29;6234:2;6214:18;;;6207:30;-1:-1:-1;;;6253:18:29;;;6246:50;6313:18;;1209:53:5;5993:344:29;1209:53:5;-1:-1:-1;1286:9:5;918:14:22;1315:29:5;1321:9;918:14:22;1315:5:5;:29::i;:::-;1355:21;:9;1032:19:22;;1050:1;1032:19;;;945:123;1355:21:5;1119:264;;;:::o;4612:296:16:-;4771:41;719:10:21;4804:7:16;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:16;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;751:171:5:-;1094:13:12;:11;:13::i;:::-;839:6:5::1;::::0;;-1:-1:-1;;;;;855:16:5;;::::1;-1:-1:-1::0;;;;;;855:16:5;::::1;::::0;::::1;::::0;;;887:28:::1;::::0;;839:6;;;::::1;6968:34:29::0;;;7033:2;7018:18;;7011:43;;;;887:28:5::1;::::0;6903:18:29;887:28:5::1;;;;;;;809:113;751:171:::0;:::o;4974:149:16:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;;2324:56;;;;-1:-1:-1;;;2324:56:16;;7267:2:29;2324:56:16;;;7249:21:29;7306:2;7286:18;;;7279:30;-1:-1:-1;;;7325:18:29;;;7318:54;7389:18;;2324:56:16;7065:348:29;1929:204:16;2001:7;-1:-1:-1;;;;;2028:19:16;;2020:73;;;;-1:-1:-1;;;2020:73:16;;7620:2:29;2020:73:16;;;7602:21:29;7659:2;7639:18;;;7632:30;7698:34;7678:18;;;7671:62;-1:-1:-1;;;7749:18:29;;;7742:39;7798:19;;2020:73:16;7418:405:29;2020:73:16;-1:-1:-1;;;;;;2110:16:16;;;;;:9;:16;;;;;;;1929:204::o;1824:101:12:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:16:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:21;4296:8:16;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:21;5352:7:16;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:16;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;1684:9:5;;;;;;;;;-1:-1:-1;1684:9:5;;;1608:92;2957:10:16;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:16:o;1389:146:5:-;1472:6;;-1:-1:-1;;;;;1472:6:5;1458:10;:20;1450:53;;;;-1:-1:-1;;;1450:53:5;;6195:2:29;1450:53:5;;;6177:21:29;6234:2;6214:18;;;6207:30;-1:-1:-1;;;6253:18:29;;;6246:50;6313:18;;1450:53:5;5993:344:29;1450:53:5;1513:15;1519:8;1513:5;:15::i;:::-;1389:146;:::o;2074:198:12:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:12;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:12;;8531:2:29;2154:73:12::1;::::0;::::1;8513:21:29::0;8570:2;8550:18;;;8543:30;8609:34;8589:18;;;8582:62;-1:-1:-1;;;8660:18:29;;;8653:36;8706:19;;2154:73:12::1;8329:402:29::0;2154:73:12::1;2237:28;2256:8;2237:18;:28::i;13240:133:16:-:0;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;13313:53;;;;-1:-1:-1;;;13313:53:16;;7267:2:29;13313:53:16;;;7249:21:29;7306:2;7286:18;;;7279:30;-1:-1:-1;;;7325:18:29;;;7318:54;7389:18;;13313:53:16;7065:348:29;12572:171:16;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:16;-1:-1:-1;;;;;12646:29:16;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:16;;;;;;;;;;;12572:171;;:::o;8925:920::-;-1:-1:-1;;;;;9004:16:16;;8996:61;;;;-1:-1:-1;;;8996:61:16;;8938:2:29;8996:61:16;;;8920:21:29;;;8957:18;;;8950:30;9016:34;8996:18;;;8989:62;9068:18;;8996:61:16;8736:356:29;8996:61:16;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:16;;9299:2:29;9067:58:16;;;9281:21:29;9338:2;9318:18;;;9311:30;9377;9357:18;;;9350:58;9425:18;;9067:58:16;9097:352:29;9067:58:16;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:16;;9299:2:29;9271:58:16;;;9281:21:29;9338:2;9318:18;;;9311:30;9377;9357:18;;;9350:58;9425:18;;9271:58:16;9097:352:29;9271:58:16;-1:-1:-1;;;;;9671:13:16;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:16;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:16;:7;-1:-1:-1;;;;;7570:16:16;;:52;;;-1:-1:-1;;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:16;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:16;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:16:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:16;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:16;;11346:81;;;;-1:-1:-1;;;11346:81:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:16;;11437:65;;;;-1:-1:-1;;;11437:65:16;;10062:2:29;11437:65:16;;;10044:21:29;10101:2;10081:18;;;10074:30;10140:34;10120:18;;;10113:62;-1:-1:-1;;;10191:18:29;;;10184:34;10235:19;;11437:65:16;9860:400:29;11437:65:16;11682:4;-1:-1:-1;;;;;11655:31:16;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:16;;11647:81;;;;-1:-1:-1;;;11647:81:16;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:16;;;;;;-1:-1:-1;;;;;12265:15:16;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:16;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;1359:130:12:-;1273:6;;-1:-1:-1;;;;;1273:6:12;719:10:21;1422:23:12;1414:68;;;;-1:-1:-1;;;1414:68:12;;10467:2:29;1414:68:12;;;10449:21:29;;;10486:18;;;10479:30;10545:34;10525:18;;;10518:62;10597:18;;1414:68:12;10265:356:29;2426:187:12;2518:6;;;-1:-1:-1;;;;;2534:17:12;;;-1:-1:-1;;;;;;2534:17:12;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:16:-;12999:8;-1:-1:-1;;;;;12990:17:16;:5;-1:-1:-1;;;;;12990:17:16;;12982:55;;;;-1:-1:-1;;;12982:55:16;;10828:2:29;12982:55:16;;;10810:21:29;10867:2;10847:18;;;10840:30;10906:27;10886:18;;;10879:55;10951:18;;12982:55:16;10626:349:29;12982:55:16;-1:-1:-1;;;;;13047:25:16;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:16;;;;;;;;;;13108:41;;540::29;;;13108::16;;513:18:29;13108:41:16;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:16;;;;;;;:::i;447:696:23:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:23;-1:-1:-1;604:41:23;-1:-1:-1;765:28:23;;;781:2;765:28;820:280;-1:-1:-1;;851:5:23;-1:-1:-1;;;985:2:23;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:23;820:280;1064:21;-1:-1:-1;1120:6:23;447:696;-1:-1:-1;;;447:696:23:o;10171:762:16:-;10230:13;10246:23;10261:7;10246:14;:23::i;:::-;10230:39;;10441:23;10456:7;10441:14;:23::i;:::-;10509:24;;;;:15;:24;;;;;;;;10502:31;;-1:-1:-1;;;;;;10502:31:16;;;;;;-1:-1:-1;;;;;10749:16:16;;;;;:9;:16;;;;;:21;;-1:-1:-1;;10749:21:16;;;10797:16;;;:7;:16;;;;;;10790:23;;;;;;;10829:36;10433:31;;-1:-1:-1;10525:7:16;;10829:36;;10509:24;;10829:36;4169:153;;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:16;;1702:19:20;:23;14090:660:16;;14129:71;;-1:-1:-1;;;14129:71:16;;-1:-1:-1;;;;;14129:36:16;;;;;:71;;719:10:21;;14180:4:16;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:16;;;;;;;;-1:-1:-1;;14129:71:16;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:16;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:16;-1:-1:-1;;;14250:51:16;;-1:-1:-1;14243:58:16;;14090:660;-1:-1:-1;14735:4:16;13925:831;;;;;;:::o;10139:916:26:-;10192:7;;-1:-1:-1;;;10267:17:26;;10263:103;;-1:-1:-1;;;10304:17:26;;;-1:-1:-1;10349:2:26;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:26;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:26;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:26;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:26;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:26;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:26:o;14:131:29:-;-1:-1:-1;;;;;;88:32:29;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:29;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:29;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:29:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:29;;1348:180;-1:-1:-1;1348:180:29:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:29;;1848:42;;1838:70;;1904:1;1901;1894:12;1919:254;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:29:o;2178:186::-;2237:6;2290:2;2278:9;2269:7;2265:23;2261:32;2258:52;;;2306:1;2303;2296:12;2258:52;2329:29;2348:9;2329:29;:::i;2551:328::-;2628:6;2636;2644;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2736:29;2755:9;2736:29;:::i;:::-;2726:39;;2784:38;2818:2;2807:9;2803:18;2784:38;:::i;:::-;2774:48;;2869:2;2858:9;2854:18;2841:32;2831:42;;2551:328;;;;;:::o;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:29;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6342:409::-;6544:2;6526:21;;;6583:2;6563:18;;;6556:30;6622:34;6617:2;6602:18;;6595:62;-1:-1:-1;;;6688:2:29;6673:18;;6666:43;6741:3;6726:19;;6342:409::o;7828:496::-;8007:3;8045:6;8039:13;8061:66;8120:6;8115:3;8108:4;8100:6;8096:17;8061:66;:::i;:::-;8190:13;;8149:16;;;;8212:70;8190:13;8149:16;8259:4;8247:17;;8212:70;:::i;:::-;8298:20;;7828:496;-1:-1:-1;;;;7828:496:29:o;9454:401::-;9656:2;9638:21;;;9695:2;9675:18;;;9668:30;9734:34;9729:2;9714:18;;9707:62;-1:-1:-1;;;9800:2:29;9785:18;;9778:35;9845:3;9830:19;;9454:401::o;10980:414::-;11182:2;11164:21;;;11221:2;11201:18;;;11194:30;11260:34;11255:2;11240:18;;11233:62;-1:-1:-1;;;11326:2:29;11311:18;;11304:48;11384:3;11369:19;;10980:414::o;11531:489::-;-1:-1:-1;;;;;11800:15:29;;;11782:34;;11852:15;;11847:2;11832:18;;11825:43;11899:2;11884:18;;11877:34;;;11947:3;11942:2;11927:18;;11920:31;;;11725:4;;11968:46;;11994:19;;11986:6;11968:46;:::i;:::-;11960:54;11531:489;-1:-1:-1;;;;;;11531:489:29:o;12025:249::-;12094:6;12147:2;12135:9;12126:7;12122:23;12118:32;12115:52;;;12163:1;12160;12153:12;12115:52;12195:9;12189:16;12214:30;12238:5;12214:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burnPassTicket(uint256)": "ece2230d",
    "changeCaller(address)": "2921d8d4",
    "daoPassTicket(address)": "207b7ad3",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"newCaller\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burnPassTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"changeCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"daoPassTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"daoPassTicket(address)\":{\"details\":\". Function responsible for generating dao ticket\",\"params\":{\"_investor\":\". address of investor\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"newCaller(address,address)\":{\"notice\":\"===================================               Events =====================================\"}},\"kind\":\"user\",\"methods\":{\"daoPassTicket(address)\":{\"notice\":\". This function can only be called by Vendao\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/accessTicket.sol\":\"VenAccessTicket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/accessTicket.sol\":{\"keccak256\":\"0x45594b736800b370a26153cb12c7482670bc93fc316cdf2f17ee3370ceb697ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe7dcff75c1c1a3bc6a2a706007ebe25674fbe5c7e80f46606bad3c73e3d4707\",\"dweb:/ipfs/QmViodFoqW5VuwFPG6Z4hnh2Cg5ZP7oYFUi8xYFUfHokRE\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_caller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "newCaller",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnPassTicket"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_caller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeCaller"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_investor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "daoPassTicket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_newTokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "daoPassTicket(address)": {
            "details": ". Function responsible for generating dao ticket",
            "params": {
              "_investor": ". address of investor"
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "daoPassTicket(address)": {
            "notice": ". This function can only be called by Vendao"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/accessTicket.sol": "VenAccessTicket"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/accessTicket.sol": {
        "keccak256": "0x45594b736800b370a26153cb12c7482670bc93fc316cdf2f17ee3370ceb697ad",
        "urls": [
          "bzz-raw://fe7dcff75c1c1a3bc6a2a706007ebe25674fbe5c7e80f46606bad3c73e3d4707",
          "dweb:/ipfs/QmViodFoqW5VuwFPG6Z4hnh2Cg5ZP7oYFUi8xYFUfHokRE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/accessTicket.sol",
    "id": 1664,
    "exportedSymbols": {
      "Address": [
        4874
      ],
      "Context": [
        4896
      ],
      "Counters": [
        4970
      ],
      "ERC165": [
        5223
      ],
      "ERC721": [
        4383
      ],
      "IERC165": [
        5235
      ],
      "IERC721": [
        4499
      ],
      "IERC721Metadata": [
        4544
      ],
      "IERC721Receiver": [
        4517
      ],
      "Math": [
        6101
      ],
      "Ownable": [
        3303
      ],
      "SignedMath": [
        7747
      ],
      "Strings": [
        5199
      ],
      "VenAccessTicket": [
        1663
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1670:5",
    "nodes": [
      {
        "id": 1543,
        "nodeType": "PragmaDirective",
        "src": "32:23:5",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 1544,
        "nodeType": "ImportDirective",
        "src": "57:57:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1664,
        "sourceUnit": 4384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1545,
        "nodeType": "ImportDirective",
        "src": "115:52:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1664,
        "sourceUnit": 4971,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1546,
        "nodeType": "ImportDirective",
        "src": "168:52:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1664,
        "sourceUnit": 3304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1663,
        "nodeType": "ContractDefinition",
        "src": "222:1480:5",
        "nodes": [
          {
            "id": 1554,
            "nodeType": "UsingForDirective",
            "src": "272:36:5",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1551,
              "name": "Counters",
              "nameLocations": [
                "278:8:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4970,
              "src": "278:8:5"
            },
            "typeName": {
              "id": 1553,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1552,
                "name": "Counters.Counter",
                "nameLocations": [
                  "291:8:5",
                  "300:7:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4902,
                "src": "291:16:5"
              },
              "referencedDeclaration": 4902,
              "src": "291:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4902_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 1561,
            "nodeType": "EventDefinition",
            "src": "428:34:5",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1555,
              "nodeType": "StructuredDocumentation",
              "src": "314:109:5",
              "text": "===================================\n               Events\n====================================="
            },
            "eventSelector": "de2be9795b1eaa6d18d69ccec06258b7f0c3312e8ef7b352f93ae3d81534ca31",
            "name": "newCaller",
            "nameLocation": "434:9:5",
            "parameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "444:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1559,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "453:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "443:18:5"
            }
          },
          {
            "id": 1564,
            "nodeType": "VariableDeclaration",
            "src": "587:34:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "612:9:5",
            "scope": 1663,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$4902_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1562,
                "name": "Counters.Counter",
                "nameLocations": [
                  "587:8:5",
                  "596:7:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4902,
                "src": "587:16:5"
              },
              "referencedDeclaration": 4902,
              "src": "587:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4902_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1566,
            "nodeType": "VariableDeclaration",
            "src": "627:14:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "caller",
            "nameLocation": "635:6:5",
            "scope": 1663,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1565,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "627:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1580,
            "nodeType": "FunctionDefinition",
            "src": "648:97:5",
            "nodes": [],
            "body": {
              "id": 1579,
              "nodeType": "Block",
              "src": "702:43:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1575,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "712:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1576,
                      "name": "_caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1568,
                      "src": "721:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "712:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "712:16:5"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56656e2044414f",
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "684:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ceb5b043ee3f1810e660ef8bf252b9582eeeed2901ffd3e45b1f7c7512c9a3e9",
                      "typeString": "literal_string \"Ven DAO\""
                    },
                    "value": "Ven DAO"
                  },
                  {
                    "hexValue": "56656e",
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "695:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4341fc5cc82a41755e15b5313546d1e81e22e07bfc0db208de5efe4d29b2e19",
                      "typeString": "literal_string \"Ven\""
                    },
                    "value": "Ven"
                  }
                ],
                "id": 1573,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1570,
                  "name": "ERC721",
                  "nameLocations": [
                    "677:6:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "677:6:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "677:24:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1568,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "668:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "660:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:17:5"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:5"
            },
            "scope": 1663,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1601,
            "nodeType": "FunctionDefinition",
            "src": "751:171:5",
            "nodes": [],
            "body": {
              "id": 1600,
              "nodeType": "Block",
              "src": "809:113:5",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1588,
                      "mutability": "mutable",
                      "name": "oldCaller",
                      "nameLocation": "827:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1600,
                      "src": "819:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1587,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1590,
                  "initialValue": {
                    "id": 1589,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1566,
                    "src": "839:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:26:5"
                },
                {
                  "expression": {
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1591,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "855:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1592,
                      "name": "_caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "864:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "855:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "855:16:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1596,
                        "name": "oldCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "897:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1597,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "908:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1595,
                      "name": "newCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "887:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1599,
                  "nodeType": "EmitStatement",
                  "src": "882:33:5"
                }
              ]
            },
            "functionSelector": "2921d8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1584,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "799:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3222,
                  "src": "799:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "799:9:5"
              }
            ],
            "name": "changeCaller",
            "nameLocation": "760:12:5",
            "parameters": {
              "id": 1583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "781:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "773:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:17:5"
            },
            "returnParameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:5"
            },
            "scope": 1663,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1634,
            "nodeType": "FunctionDefinition",
            "src": "1119:264:5",
            "nodes": [],
            "body": {
              "id": 1633,
              "nodeType": "Block",
              "src": "1199:184:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1610,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1217:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1221:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1217:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1612,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "1231:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1217:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573736962696c6974792044656e696564",
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17eb150d03eb81519cad6ab2d5f4c7c15d22578de1a05ca9f7f238660b72f91a",
                          "typeString": "literal_string \"Accessibility Denied\""
                        },
                        "value": "Accessibility Denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17eb150d03eb81519cad6ab2d5f4c7c15d22578de1a05ca9f7f238660b72f91a",
                          "typeString": "literal_string \"Accessibility Denied\""
                        }
                      ],
                      "id": 1609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1209:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:53:5"
                },
                {
                  "expression": {
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1617,
                      "name": "_newTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "1272:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1618,
                          "name": "_tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1564,
                          "src": "1286:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$4902_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1296:7:5",
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4914,
                        "src": "1286:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$4902_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$4902_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1286:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1272:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:33:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1624,
                        "name": "_investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "1321:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1625,
                        "name": "_newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "1332:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1623,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1315:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:29:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1628,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "1355:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$4902_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1365:9:5",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4928,
                      "src": "1355:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$4902_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$4902_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1632,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:21:5"
                }
              ]
            },
            "documentation": {
              "id": 1602,
              "nodeType": "StructuredDocumentation",
              "src": "928:186:5",
              "text": " @notice  . This function can only be called by Vendao\n @dev     . Function responsible for generating dao ticket\n @param   _investor  . address of investor"
            },
            "functionSelector": "207b7ad3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "daoPassTicket",
            "nameLocation": "1128:13:5",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "_investor",
                  "nameLocation": "1150:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1634,
                  "src": "1142:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:19:5"
            },
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "_newTokenId",
                  "nameLocation": "1186:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1634,
                  "src": "1178:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:21:5"
            },
            "scope": 1663,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1652,
            "nodeType": "FunctionDefinition",
            "src": "1389:146:5",
            "nodes": [],
            "body": {
              "id": 1651,
              "nodeType": "Block",
              "src": "1440:95:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1640,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1458:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1462:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1458:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1642,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "1472:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1458:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573736962696c6974792044656e696564",
                        "id": 1644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1480:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17eb150d03eb81519cad6ab2d5f4c7c15d22578de1a05ca9f7f238660b72f91a",
                          "typeString": "literal_string \"Accessibility Denied\""
                        },
                        "value": "Accessibility Denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17eb150d03eb81519cad6ab2d5f4c7c15d22578de1a05ca9f7f238660b72f91a",
                          "typeString": "literal_string \"Accessibility Denied\""
                        }
                      ],
                      "id": 1639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1450:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1450:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1646,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1648,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "1519:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1647,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4124,
                      "src": "1513:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:15:5"
                }
              ]
            },
            "functionSelector": "ece2230d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnPassTicket",
            "nameLocation": "1398:14:5",
            "parameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1636,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1421:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "1413:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:18:5"
            },
            "returnParameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1440:0:5"
            },
            "scope": 1663,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1662,
            "nodeType": "FunctionDefinition",
            "src": "1608:92:5",
            "nodes": [],
            "body": {
              "id": 1661,
              "nodeType": "Block",
              "src": "1674:26:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1691:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1658,
                  "id": 1660,
                  "nodeType": "Return",
                  "src": "1684:9:5"
                }
              ]
            },
            "baseFunctions": [
              3670
            ],
            "documentation": {
              "id": 1653,
              "nodeType": "StructuredDocumentation",
              "src": "1541:62:5",
              "text": " @dev  . Function that holds access ticket URI"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1617:8:5",
            "overrides": {
              "id": 1655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1642:8:5"
            },
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:2:5"
            },
            "returnParameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "1659:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:15:5"
            },
            "scope": 1663,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1547,
              "name": "ERC721",
              "nameLocations": [
                "250:6:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "250:6:5"
            },
            "id": 1548,
            "nodeType": "InheritanceSpecifier",
            "src": "250:6:5"
          },
          {
            "baseName": {
              "id": 1549,
              "name": "Ownable",
              "nameLocations": [
                "258:7:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3303,
              "src": "258:7:5"
            },
            "id": 1550,
            "nodeType": "InheritanceSpecifier",
            "src": "258:7:5"
          }
        ],
        "canonicalName": "VenAccessTicket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1663,
          3303,
          4383,
          4544,
          4499,
          5223,
          5235,
          4896
        ],
        "name": "VenAccessTicket",
        "nameLocation": "231:15:5",
        "scope": 1664,
        "usedErrors": [],
        "usedEvents": [
          1561,
          3204,
          4398,
          4407,
          4416
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 5
}